this can also be done by redux=>react-redux or redux-toolkit(RTK)

for prop drilling=>to pass the propo directly to a file without sending to mutiple component in nesting by making it globally available
documentation-context api react dev

we make a provider in it
we use it like a warapper like div for all components
------------------Folder----------------------------
//Context
---------------------File-------------------------
/////UserContext.js
import React from "react";
const UserContext = React.createContext();
export default UserContext;
--------------------File--------------------------
////UserContextProvider.jsx
import React, { useState } from "react";
import UserContext from "./userContext";

const UserContextProvider = ({ children }) => {
    const [User, setUser] = useState(null);
    return <UserContext.Provider value={{ User, setUser }}>{children}</UserContext.Provider>;
};
export default UserContextProvider;
-------------------Store at app.jsx or main.jsx---------------------------
//ab jo bhi component UserContextProvider ke andar hai usko access milega
import { useState } from "react";
import "./App.css";
import UserContextProvider from "./Context/UserContextProvider";
import Login from "./components/Login";
import Profile from "./components/Profile";

function App() {
    return (
        <UserContextProvider>
            <h1>react</h1>
            <Login />
            <Profile />
        </UserContextProvider>
    );
}

export default App;



-------------------Component file where you aacess the state---------------------------
UserContext ke andar component fetch karne ke liye useContext hook use karte hai

import React, { useContext, useState } from "react";
import UserContext from "../Context/userContext";

function Login() {
    const [userName, setUserName] = useState("second");
    const [password, setPassword] = useState("second");

    const { setUser } = useContext(UserContext);

    const handleSubmit = (e) => {
        e.preventDefault();
        setUser({ userName, password }); //sendind data
    };
    return (
        <div>
            <h2>Login</h2>
            <input
                type="text"
                value={userName}
                onChange={(e) => {
                    setUserName(e.target.value);
                }}
                placeholder="username"
            />
            <input
                type="text"
                value={password}
                onChange={(e) => {
                    setPassword(e.target.value);
                }}
                placeholder="password"
            />
            <button onClick={handleSubmit}>Submit</button>
        </div>
    );
}

export default Login;
------------------- ---------------------------
